@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject BaseUrlProvider BaseUrlProvider
<div id="app">
    <!--Wide Screen Sidebar-->
    <div class="sidebar">
        <div class="overlay bg-black fixed top-0 bottom-0 left-0 right-0 z-10" onclick="closeSidebar()"></div>
        <nav class="fixed flex flex-col h-screen bg-gradient-to-r from-cyan-800 to-cyan-950 text-white w-64 overflow-y-auto z-10 drop-shadow-2xl">
            <div class="h-16 flex items-center px-6 text-lg bg-cyan-950 flex-shrink-0">
                <span class="font-bold">Registration</span>
                &nbsp;Portal

            </div>
            <NavMenu />
        </nav>
    </div>
    
    <div class="md:ml-64 mt-16 md:mt-0 flex-shrink flex-grow z-0">
        <!--Small Screen Sidebar-->
        <div class="bg-cyan-950 top-0 fixed w-full md:hidden h-16 flex items-center justify-between px-4 text-white text-lg z-10">
            <div class="flex items-center">
                <button title="Show navigation menu" class="hamburger mr-2 p-2 -m-3" onclick="toggleSidebar()">
                    <div class="handle rounded-lg bg-slate-600 p-2">
                        <div class="space-y-1 opacity-75">
                            <div class="line w-6 h-1 bg-white"></div>
                            <div class="line w-6 h-1 bg-white"></div>
                            <div class="line w-6 h-1 bg-white"></div>
                        </div>
                    </div>
                </button>
                <span class="font-bold">Registration</span>
                &nbsp;| Portal

            </div>

            <div>
                <LogInOrOut2 />
            </div>
        </div>
        <!--Wide Screen Right Section-->
        <div>
            <div class="top-row">
                <LogInOrOut />
            </div>
            <div class="page">
                @Body
            </div>
        </div>
    </div>
</div>

@code {
    protected override Task OnInitializedAsync()
    {
        BaseUrlProvider.SetBaseUrl(NavigationManager.BaseUri);
        return base.OnInitializedAsync();
    }
}
