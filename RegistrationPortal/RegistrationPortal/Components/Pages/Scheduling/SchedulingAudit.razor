@page "/admin/scheduling-audit"
@using RegistrationPortal.Helpers
@inject SchedulingAuditService AuditService
@inject IFormData FormData
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

@rendermode InteractiveServer

@attribute [Authorize(Roles = "Admin")]

<PageTitle>Scheduling Audit</PageTitle>

<div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-6">
    <div class="sm:flex sm:items-center mb-6">
        <div class="sm:flex-auto">
            <h1 class="text-2xl font-bold mb-3" tabindex="-1">Scheduling Audit Tool</h1>
            <p class="mt-2 text-gray-700">
                This tool identifies discrepancies between scheduled forms and slot occupancy counts.
            </p>
        </div>
        <div class="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
            @if (isFixing)
            {
                <button disabled class="inline-flex items-center rounded-md bg-gray-400 px-3 py-2 text-sm font-semibold text-white shadow-sm">
                    <span class="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></span>
                    Fixing...
                </button>
            }
            else if (auditResult?.SlotDiscrepancies.Count > 0)
            {
                <button @onclick="FixDiscrepancies" class="inline-flex items-center rounded-md bg-cyan-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-cyan-500">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    </svg>
                    Fix Discrepancies
                </button>
            }
        </div>
    </div>

    <div class="flex space-x-4 mb-6">
        <div>
            <label for="division" class="block text-sm font-medium text-gray-700">Division</label>
            <select id="division" @bind="selectedDivision" class="mt-1 block w-full rounded-md border-gray-300 py-2 pl-3 pr-10 text-base focus:border-cyan-500 focus:outline-none focus:ring-cyan-500 sm:text-sm">
                <option value="Memorization">Memorization</option>
                <option value="Ten Qira'at">Ten Qira'at</option>
                <option value="Islamic Studies">Islamic Studies</option>
            </select>
        </div>
        <div class="pt-6">
            <button @onclick="RunAudit" class="inline-flex items-center rounded-md border border-transparent bg-cyan-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-cyan-700 focus:outline-none">
                @if(isLoading)
                {
                    <span class="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></span>
                    <p>Running Audit...</p>
                    
                }
                else
                {
                    <span>Run Audit</span>
                }
            </button>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="rounded-md bg-red-50 p-4 mb-6">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                    </svg>
                </div>
                <div class="ml-3">
                    <h3 class="text-sm font-medium text-red-800">@errorMessage</h3>
                </div>
            </div>
        </div>
    }

    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="rounded-md bg-green-50 p-4 mb-6">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                    </svg>
                </div>
                <div class="ml-3">
                    <h3 class="text-sm font-medium text-green-800">@successMessage</h3>
                </div>
            </div>
        </div>
    }

    @if (auditResult != null)
    {
        <div class="bg-white shadow overflow-hidden sm:rounded-lg mb-6">
            <div class="px-4 py-5 sm:px-6 bg-gray-50">
                <h3 class="text-lg leading-6 font-medium text-gray-900">Audit Summary</h3>
            </div>
            <div class="border-t border-gray-200 px-4 py-5 sm:p-6">
                <dl class="grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-3">
                    <div class="sm:col-span-1">
                        <dt class="text-sm font-medium text-gray-500">Total Verified Forms</dt>
                        <dd class="mt-1 text-sm text-gray-900">@auditResult.TotalVerifiedForms</dd>
                    </div>
                    <div class="sm:col-span-1">
                        <dt class="text-sm font-medium text-gray-500">Forms With Schedule</dt>
                        <dd class="mt-1 text-sm text-gray-900">@auditResult.TotalScheduledForms</dd>
                    </div>
                    <div class="sm:col-span-1">
                        <dt class="text-sm font-medium text-gray-500">Total Slot Participant Count</dt>
                        <dd class="mt-1 text-sm text-gray-900">@auditResult.TotalSlotParticipantCount</dd>
                    </div>
                    <div class="sm:col-span-3">
                        <dt class="text-sm font-medium text-gray-500">Discrepancy</dt>
                        <dd class="mt-1 text-sm @(auditResult.Discrepancy != 0 ? "text-red-600 font-semibold" : "text-green-600")">
                            @if (auditResult.Discrepancy == 0)
                            {
                                <span>No discrepancy found! All counts match correctly.</span>
                            }
                            else
                            {
                                <span>@Math.Abs(auditResult.Discrepancy) @(auditResult.Discrepancy > 0 ? "more" : "fewer") forms are scheduled than slot participant counts indicate.</span>
                            }
                        </dd>
                    </div>
                </dl>
            </div>
        </div>

        @if (auditResult.SlotDiscrepancies.Count > 0)
        {
            <div class="bg-white shadow overflow-hidden sm:rounded-lg mb-6">
                <div class="px-4 py-5 sm:px-6 bg-gray-50">
                    <h3 class="text-lg leading-6 font-medium text-gray-900">Slot Discrepancies</h3>
                    <p class="mt-1 max-w-2xl text-sm text-gray-500">Slots where the participant count doesn't match the number of forms referencing the slot.</p>
                </div>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Time</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Recorded Count</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actual Count</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Discrepancy</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Participants</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach (var discrepancy in auditResult.SlotDiscrepancies)
                            {
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@discrepancy.Slot.Date</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@FormatTime(discrepancy.Slot.StartTime) - @FormatTime(discrepancy.Slot.EndTime)</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@discrepancy.Slot.CurrentParticipants</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@discrepancy.ActualParticipantCount</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm @(discrepancy.Discrepancy > 0 ? "text-red-600" : "text-amber-600") font-medium">
                                        @(discrepancy.Discrepancy > 0 ? "+" : "")@discrepancy.Discrepancy
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        @if (discrepancy.ParticipantFormIds.Count > 0)
                                        {
                                            @discrepancy.ParticipantFormIds.Count <button @onclick="() => ShowParticipants(discrepancy)" class="ml-2 text-cyan-600 hover:text-cyan-900">View</button>
                                        }
                                        else
                                        {
                                            <span class="text-gray-400">None</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        @if (auditResult.MismatchedForms.Count > 0)
        {
            <div class="bg-white shadow overflow-hidden sm:rounded-lg mb-6">
                <div class="px-4 py-5 sm:px-6 bg-gray-50">
                    <h3 class="text-lg leading-6 font-medium text-gray-900">Mismatched Schedule Information</h3>
                    <p class="mt-1 max-w-2xl text-sm text-gray-500">Forms where the schedule information doesn't match their assigned slot.</p>
                </div>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Form Date</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Form Time</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Slot Date</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Slot Time</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach (var form in auditResult.MismatchedForms)
                            {
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@form.PersonName</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@form.FormScheduledDate</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@form.FormScheduledTime</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@form.SlotScheduledDate</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@form.SlotScheduledTime</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <a href="/admin/forms/edit/@form.FormId" target="_blank" class="text-cyan-600 hover:text-cyan-900">View Form</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        @if (auditResult.OrphanedForms.Count > 0)
        {
            <div class="bg-white shadow overflow-hidden sm:rounded-lg mb-6">
                <div class="px-4 py-5 sm:px-6 bg-gray-50">
                    <h3 class="text-lg leading-6 font-medium text-gray-900">Orphaned Forms</h3>
                    <p class="mt-1 max-w-2xl text-sm text-gray-500">Forms that reference slot IDs that no longer exist.</p>
                </div>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Form ID</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Missing Slot ID</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Scheduled Date</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Scheduled Time</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach (var form in auditResult.OrphanedForms)
                            {
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@form.PersonName</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@form.FormId</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@form.SlotId</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@form.ScheduledDate</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@form.ScheduledTime</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <a href="/admin/forms/edit/@form.FormId" target="_blank" class="text-cyan-600 hover:text-cyan-900">View Form</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    }
</div>

@code {
    private string selectedDivision = "Memorization";
    private bool isLoading = false;
    private bool isFixing = false;
    private string errorMessage;
    private string successMessage;
    private SchedulingAuditService.SchedulingAuditResult auditResult;

    private async Task RunAudit()
    {
        try
        {
            isLoading = true;
            errorMessage = null;
            successMessage = null;

            auditResult = await AuditService.AuditSchedulingAsync(selectedDivision);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error running audit: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task FixDiscrepancies()
    {
        if (auditResult?.SlotDiscrepancies == null || auditResult.SlotDiscrepancies.Count == 0)
        {
            return;
        }

        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "This will update the participant counts on all slots with discrepancies to match the actual number of forms. Continue?");
        
        if (!confirmed)
        {
            return;
        }

        try
        {
            isFixing = true;
            errorMessage = null;
            
            await AuditService.FixSlotDiscrepanciesAsync(auditResult.SlotDiscrepancies);
            
            // Re-run the audit to get updated results
            auditResult = await AuditService.AuditSchedulingAsync(selectedDivision);
            
            successMessage = "Discrepancies fixed successfully.";
        }
        catch (Exception ex)
        {
            errorMessage = $"Error fixing discrepancies: {ex.Message}";
        }
        finally
        {
            isFixing = false;
        }
    }

    private async Task ShowParticipants(SchedulingAuditService.SlotDiscrepancy discrepancy)
    {
        var formIds = string.Join("\n", discrepancy.ParticipantFormIds);
        await JSRuntime.InvokeVoidAsync("alert", $"Participant Form IDs:\n{formIds}");
    }

    private string FormatTime(string timeString)
    {
        if (DateTime.TryParse(timeString, out DateTime time))
        {
            return time.ToString("h:mm tt"); // Formats as "10:00 AM"
        }

        // If it's already just a time string like "10:00:00"
        if (timeString != null && timeString.Length >= 5)
        {
            // Try to remove seconds portion if it exists
            int colonCount = timeString.Count(c => c == ':');
            if (colonCount == 2)
            {
                // Has seconds - return just hh:mm
                return timeString.Substring(0, timeString.LastIndexOf(':'));
            }
        }

        return timeString;
    }
}
